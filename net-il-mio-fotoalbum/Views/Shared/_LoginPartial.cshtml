@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <div tabindex="0" class="mt-3 p-2 shadow menu menu-compact dropdown-content bg-base-100 rounded-box w-52">
        <li>
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
        </div>
    }
    else
    {
        <div class="flex flex-column gap-5">
        <li class="nav-item">
            <a class="nav-link text-dark poppins" id="login" asp-area="Identity" asp-page="/Account/Login">Sign In</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark bg-primary px-6 py-3 text-white poppins rounded-full ring-red-300 focus:outline-none focus:ring-4 transform transition duration-700 hover:scale-105" id="register" asp-area="Identity" asp-page="/Account/Register">Sign Up</a>
        </li>
        </div>
    }
</ul>


